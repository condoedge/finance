name: Quick Test

on:
  workflow_dispatch:
  push:
    branches: [ test-ci ]

jobs:
  quick-test:
    name: Quick MySQL Test
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: testing_password
          MYSQL_DATABASE: testbench
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, fileinfo
          coverage: none
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Configure MySQL
        run: |
          # Wait for MySQL
          for i in {1..30}; do
            mysql -h127.0.0.1 -uroot -ptesting_password -e "SELECT 1" && break
            echo "Waiting for MySQL..."
            sleep 1
          done
          
          # Enable function creation
          mysql -h127.0.0.1 -uroot -ptesting_password -e "SET GLOBAL log_bin_trust_function_creators = 1;"
          
          # Show MySQL version and settings
          mysql -h127.0.0.1 -uroot -ptesting_password -e "SELECT VERSION();"
          mysql -h127.0.0.1 -uroot -ptesting_password -e "SHOW VARIABLES LIKE 'log_bin_trust_function_creators';"

      - name: Update phpunit.xml for CI
        run: |
          cp phpunit.xml phpunit.xml.bak
          sed -i 's|3309|3306|g' phpunit.xml

      - name: Show environment info
        run: |
          php --version
          composer --version
          php -m | grep -E "(pdo|mysql)"
          echo "---"
          vendor/bin/testbench --version
          echo "---"
          cat testbench.yaml || echo "No testbench.yaml found"
          echo "---"
          echo "MySQL Connection Test:"
          php -r "try { \$pdo = new PDO('mysql:host=127.0.0.1;port=3306;dbname=testbench', 'root', 'testing_password'); echo 'MySQL connection successful'; } catch (Exception \$e) { echo 'MySQL connection failed: ' . \$e->getMessage(); }"

      - name: Run migrations with debug
        run: |
          vendor/bin/testbench migrate:fresh --force -vvv
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testbench
          DB_USERNAME: root
          DB_PASSWORD: testing_password
          APP_DEBUG: true

      - name: List database objects
        run: |
          echo "=== Tables ==="
          mysql -h127.0.0.1 -P3306 -uroot -ptesting_password testbench -e "SHOW TABLES;"
          echo "=== Functions ==="
          mysql -h127.0.0.1 -P3306 -uroot -ptesting_password testbench -e "SHOW FUNCTION STATUS WHERE Db = 'testbench';"
          echo "=== Triggers ==="
          mysql -h127.0.0.1 -P3306 -uroot -ptesting_password testbench -e "SHOW TRIGGERS;"

      - name: Run a single test with debug
        run: |
          vendor/bin/testbench package:test --filter="test_" --stop-on-failure -vvv || true
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testbench
          DB_USERNAME: root
          DB_PASSWORD: testing_password
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: testing_password
          MYSQL_DATABASE: testbench
          APP_DEBUG: true

      - name: Upload logs on failure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            storage/logs/
            phpunit.xml
            phpunit.xml.bak
            testbench.yaml
