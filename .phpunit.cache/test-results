{"version":1,"defects":{"Tests\\Unit\\InvoicesTest::testOfTests":8,"Tests\\Unit\\InvoicesTest::testCreatingInvoice":7,"Tests\\Unit\\InvoicesTest::testOfTests2":8,"Tests\\Unit\\InvoicesTest::testCreateInvoice":8,"Tests\\Unit\\InvoicesTest::testUpdateInvoice":8,"Tests\\Unit\\JsonCasesTest::test_cases":8,"Tests\\Unit\\FinantialModelsTest::testBootAllFinantialModels":5,"Tests\\Feature\\IntegrityCheckTest::individual_invoice_detail_save_propagates_to_parent_invoice":8,"Tests\\Feature\\IntegrityCheckTest::updating_invoice_detail_recalculates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::deleting_invoice_detail_updates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::multiple_invoice_details_aggregate_correctly":8,"Tests\\Feature\\IntegrityCheckTest::batch_integrity_check_updates_multiple_records":8,"Tests\\Feature\\IntegrityCheckTest::integrity_checker_handles_cascading_updates":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_performance_with_large_dataset":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_handles_concurrent_modifications":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_validates_calculation_accuracy":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_works_without_specific_ids":8,"Tests\\Feature\\IntegrityCheckTest::integrity_events_are_triggered_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_individual_invoice_detail_save_propagates_to_parent_invoice":8,"Tests\\Feature\\IntegrityCheckTest::test_updating_invoice_detail_recalculates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::test_deleting_invoice_detail_updates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::test_multiple_invoice_details_aggregate_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_batch_integrity_check_updates_multiple_records":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_checker_handles_cascading_updates":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_performance_with_large_dataset":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_handles_concurrent_modifications":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_validates_calculation_accuracy":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_works_without_specific_ids":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_events_are_triggered_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_customer_due_amount_integrity_check":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment_for_specific_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_single_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_payment_amount_left":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_invoice_due_amount":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_to_invoice_from_different_customer":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_twice_with_integrity_constraints":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_handles_partial_payment_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_credit_note_to_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_validates_database_integrity_triggers":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_payment_amount_left_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_invoice_due_amount_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_prevents_negative_payment_amount_left":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_zero_amount_applications":7,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_negative_amount_applications":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_multiple_invoice_applications_with_amount_constraints":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_draft_invoice_application_prevention":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_credit_note_application_logic":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_handles_overpayment_scenarios":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_precision_in_decimal_calculations":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_concurrent_application_scenarios":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_payment_amount_left_function":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_invoice_due_function":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_on_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_update":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_customer_due_amount_calculation_with_multiple_invoices":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_credit_note_application_with_database_functions":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_complex_scenario_with_multiple_payments_and_invoices":8,"Tests\\Unit\\GraphTest::test_graph_calculates_descendants_correctly":8,"Tests\\Unit\\GraphTest::test_graph_calculates_ancestors_correctly":8,"Tests\\Unit\\GraphTest::test_graph_finds_roots_correctly":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_children_then_model_processes_in_correct_order":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_model_then_parents_processes_in_correct_order":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_full_integrity_check_processes_all_models":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_zero_amount_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment_for_specific_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_single_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_payment_amount_left":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_invoice_due_amount":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_to_invoice_from_different_customer":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_twice_with_integrity_constraints":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_handles_partial_payment_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_credit_note_to_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_validates_database_integrity_triggers":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_payment_amount_left_function":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_invoice_due_function":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_on_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_update":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_customer_due_amount_calculation_with_multiple_invoices":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_credit_note_application_with_database_functions":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_complex_scenario_with_multiple_payments_and_invoices":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_payment_amount_left_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_invoice_due_amount_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_prevents_negative_payment_amount_left":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_negative_amount_applications":7,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_multiple_invoice_applications_with_amount_constraints":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_draft_invoice_application_prevention":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_credit_note_application_logic":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_handles_overpayment_scenarios":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_precision_in_decimal_calculations":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_concurrent_application_scenarios":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_negative_amount_application_on_direct_insert":7,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_converts_negative_amount_into_positive":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_converts_negative_amount_applications_into_positives_if_required":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_payment_overapplication_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_invoice_overapplication_on_direct_insert":8,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_negative_payment_to_customer":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_reduces_customer_due_amount":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_cannot_exceed_its_absolute_amount_left":8,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_credit_note":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_reduces_customer_due_amount":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_can_be_applied_to_regular_invoice":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_cannot_be_applied_more_than_its_due_amount":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_application_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_and_credit_interaction":8,"Tests\\Unit\\CustomerPaymentTest::test_sign_consistency_in_calculations":8,"Tests\\Unit\\CustomerPaymentTest::test_database_triggers_handle_negative_amounts_correctly":8,"Tests\\Unit\\CustomerPaymentTest::test_prevents_incorrect_sign_applications":8,"Tests\\Unit\\CustomerPaymentTest::test_zero_amount_applications_are_prevented":8,"Tests\\Unit\\CustomerPaymentTest::test_precision_handling_with_decimals":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_application_behaves_like_positive_payment_to_credit":8,"Tests\\Unit\\CustomerPaymentTest::test_customer_balance_calculation_with_mixed_transactions":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_creation_with_credit_payment_service":8,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_cross_customer_applications":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_draft_invoice_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_zero_amount_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_delete_on_direct_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_update_that_would_cause_overapplication":7,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_negative_payment_application_to_regular_invoice":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note_with_validation":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_updates_amounts_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_credit_note_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_update_on_direct_update":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_determine_fiscal_year_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_get_fiscal_year_boundaries":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_create_fiscal_periods_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_find_period_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_generates_sequence_numbers_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_generates_unique_transaction_ids_per_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_create_gl_transaction_with_multi_tenancy":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_enforces_team_isolation_in_gl_data":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_prevents_posting_unbalanced_transactions":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_prevents_posting_to_closed_periods":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_fiscal_year_calculation_from_date":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_fiscal_period_identification":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_gl_transaction_number_generation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_gl_transaction_balance_validation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_post_unbalanced_transaction":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_create_transaction_in_closed_period":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_use_inactive_account":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_use_no_manual_entry_account_in_manual_gl":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_line_sequence_auto_generation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_modify_posted_transaction":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_determine_fiscal_year_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_get_fiscal_year_boundaries":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_create_fiscal_periods_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_find_period_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_generates_sequence_numbers_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_generates_unique_transaction_ids_per_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_create_gl_transaction_with_multi_tenancy":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_enforces_team_isolation_in_gl_data":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_prevents_posting_unbalanced_transactions":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_prevents_posting_to_closed_periods":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_creates_invoice_with_proper_business_logic":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_business_rules_on_creation":7,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_approves_invoice_with_validation":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_prevents_approval_of_non_draft_invoices":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_calculates_default_taxes_correctly":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_invoice_business_rules":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_handles_database_transactions_properly":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_can_be_mocked_for_testing_dependent_code":8,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_by_payment_method_directly":8,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_validates_payment_methods":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_customer_service_creates_customer_successfully":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_creates_payment_atomically":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_tax_service_calculates_tax_amount_correctly":7,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_invoice_detail_service_creates_detail_with_taxes_atomically":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_are_mockeable_for_unit_testing":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_backward_compatibility_still_works":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_validates_application_properly":7,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_use_database_functions_for_precision":8},"times":{"Tests\\Unit\\InvoicesTest::testOfTests":0.073,"Tests\\Unit\\InvoicesTest::testOfTests2":0.005,"Tests\\Unit\\InvoicesTest::testCreatingInvoice":0.563,"Tests\\Unit\\InvoicesTest::testCreateInvoice":5.509,"Tests\\Unit\\InvoicesTest::testUpdateInvoice":4.08,"Tests\\Unit\\JsonCasesTest::test_cases":21.02,"Tests\\Unit\\FinantialModelsTest::testBootAllFinantialModels":0.048,"Tests\\Feature\\IntegrityCheckTest::individual_invoice_detail_save_propagates_to_parent_invoice":0.027,"Tests\\Feature\\IntegrityCheckTest::updating_invoice_detail_recalculates_parent_totals":0.217,"Tests\\Feature\\IntegrityCheckTest::deleting_invoice_detail_updates_parent_totals":0.124,"Tests\\Feature\\IntegrityCheckTest::multiple_invoice_details_aggregate_correctly":0.169,"Tests\\Feature\\IntegrityCheckTest::batch_integrity_check_updates_multiple_records":0.041,"Tests\\Feature\\IntegrityCheckTest::integrity_checker_handles_cascading_updates":0.158,"Tests\\Feature\\IntegrityCheckTest::integrity_check_performance_with_large_dataset":0.135,"Tests\\Feature\\IntegrityCheckTest::integrity_check_handles_concurrent_modifications":0.141,"Tests\\Feature\\IntegrityCheckTest::integrity_check_validates_calculation_accuracy":0.116,"Tests\\Feature\\IntegrityCheckTest::integrity_check_works_without_specific_ids":0.059,"Tests\\Feature\\IntegrityCheckTest::integrity_events_are_triggered_correctly":0.137,"Tests\\Feature\\IntegrityCheckTest::test_individual_invoice_detail_save_propagates_to_parent_invoice":0.593,"Tests\\Feature\\IntegrityCheckTest::test_updating_invoice_detail_recalculates_parent_totals":0.881,"Tests\\Feature\\IntegrityCheckTest::test_deleting_invoice_detail_updates_parent_totals":1.18,"Tests\\Feature\\IntegrityCheckTest::test_multiple_invoice_details_aggregate_correctly":1.431,"Tests\\Feature\\IntegrityCheckTest::test_batch_integrity_check_updates_multiple_records":1.342,"Tests\\Feature\\IntegrityCheckTest::test_integrity_checker_handles_cascading_updates":0.948,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_performance_with_large_dataset":0.642,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_handles_concurrent_modifications":1.016,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_validates_calculation_accuracy":0.911,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_works_without_specific_ids":1.853,"Tests\\Feature\\IntegrityCheckTest::test_integrity_events_are_triggered_correctly":0.6,"Tests\\Feature\\IntegrityCheckTest::test_customer_due_amount_integrity_check":0.395,"Tests\\Unit\\GraphTest::test_graph_calculates_descendants_correctly":0.005,"Tests\\Unit\\GraphTest::test_graph_calculates_ancestors_correctly":0.005,"Tests\\Unit\\GraphTest::test_graph_finds_roots_correctly":0.003,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_children_then_model_processes_in_correct_order":1.011,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_model_then_parents_processes_in_correct_order":1.233,"Tests\\Unit\\IntegrityCheckerServiceTest::test_full_integrity_check_processes_all_models":0.989,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment":0.525,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment_for_specific_invoice":0.759,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_single_invoice":1.029,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_multiple_invoices":1.325,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_payment_amount_left":0.856,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_invoice_due_amount":0.741,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_to_invoice_from_different_customer":1.048,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_twice_with_integrity_constraints":0.856,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_handles_partial_payment_applications":1.057,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_credit_note_to_invoice":1.113,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_validates_database_integrity_triggers":0.856,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_payment_amount_left_function":1.752,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_invoice_due_function":1.741,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_on_insert":1.322,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_overapplication":1.141,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":0.97,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_delete":1.333,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_update":1.056,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_customer_due_amount_calculation_with_multiple_invoices":1.573,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_credit_note_application_with_database_functions":1.431,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_complex_scenario_with_multiple_payments_and_invoices":3.035,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_payment_amount_left_calculation":1.844,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_invoice_due_amount_calculation":1.337,"Tests\\Unit\\InvoicePaymentValidationsTest::it_prevents_negative_payment_amount_left":1.06,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_zero_amount_applications":0.879,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_negative_amount_applications":1.118,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_multiple_invoice_applications_with_amount_constraints":3.514,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_draft_invoice_application_prevention":0.877,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_credit_note_application_logic":1.455,"Tests\\Unit\\InvoicePaymentValidationsTest::it_handles_overpayment_scenarios":0.846,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_precision_in_decimal_calculations":0.946,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_concurrent_application_scenarios":1.622,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_zero_amount_applications":3.283,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment":1.333,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment_for_specific_invoice":3.294,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_single_invoice":3.937,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_multiple_invoices":6.992,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_payment_amount_left":3.84,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_invoice_due_amount":3.232,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_to_invoice_from_different_customer":4.283,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_twice_with_integrity_constraints":4.377,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_handles_partial_payment_applications":4.962,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_credit_note_to_invoice":6.559,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_validates_database_integrity_triggers":4.155,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_payment_amount_left_function":6.862,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_invoice_due_function":5.498,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_on_insert":4.428,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_overapplication":4.646,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":4.214,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_delete":4.82,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_update":4.205,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_customer_due_amount_calculation_with_multiple_invoices":7.274,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_credit_note_application_with_database_functions":5.832,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_complex_scenario_with_multiple_payments_and_invoices":14.52,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_payment_amount_left_calculation":6.99,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_invoice_due_amount_calculation":5.315,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_prevents_negative_payment_amount_left":4.098,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_negative_amount_applications":0.38,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_multiple_invoice_applications_with_amount_constraints":9.162,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_draft_invoice_application_prevention":2.717,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_credit_note_application_logic":6.177,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_handles_overpayment_scenarios":3.426,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_precision_in_decimal_calculations":4.271,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_concurrent_application_scenarios":7.315,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_negative_amount_application_on_direct_insert":0.458,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_converts_negative_amount_into_positive":3.89,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_converts_negative_amount_applications_into_positives_if_required":4.146,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_payment_overapplication_on_direct_insert":3.429,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_invoice_overapplication_on_direct_insert":3.678,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_negative_payment_to_customer":1.277,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_reduces_customer_due_amount":3.151,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note":4.543,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_cannot_exceed_its_absolute_amount_left":3.374,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_credit_note":3.078,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_reduces_customer_due_amount":4.789,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_can_be_applied_to_regular_invoice":6.329,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_cannot_be_applied_more_than_its_due_amount":4.861,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_application_to_multiple_invoices":8.644,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_and_credit_interaction":7.998,"Tests\\Unit\\CustomerPaymentTest::test_sign_consistency_in_calculations":5.295,"Tests\\Unit\\CustomerPaymentTest::test_database_triggers_handle_negative_amounts_correctly":3.505,"Tests\\Unit\\CustomerPaymentTest::test_prevents_incorrect_sign_applications":3.168,"Tests\\Unit\\CustomerPaymentTest::test_zero_amount_applications_are_prevented":3.281,"Tests\\Unit\\CustomerPaymentTest::test_precision_handling_with_decimals":4.015,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_application_behaves_like_positive_payment_to_credit":7.104,"Tests\\Unit\\CustomerPaymentTest::test_customer_balance_calculation_with_mixed_transactions":5.367,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_creation_with_credit_payment_service":4.147,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_cross_customer_applications":4.274,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_draft_invoice_application_on_direct_insert":3.436,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_zero_amount_application_on_direct_insert":4.25,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_updates_amounts_on_direct_insert":3.548,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_credit_note_application_on_direct_insert":5.422,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_update_on_direct_update":3.648,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_delete_on_direct_delete":3.62,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_update_that_would_cause_overapplication":3.05,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_negative_payment_application_to_regular_invoice":3.232,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note_with_validation":4.121,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_creates_invoice_with_proper_business_logic":0.51,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_business_rules_on_creation":0.658,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_approves_invoice_with_validation":0.022,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_prevents_approval_of_non_draft_invoices":0.006,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_calculates_default_taxes_correctly":0.78,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_invoice_business_rules":0.006,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_handles_database_transactions_properly":0.498,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_can_be_mocked_for_testing_dependent_code":1.587,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_gateway_without_static_state":0.817,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_gets_cash_account_without_static_state":0.802,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_handles_concurrent_requests_safely":1.542,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_facade_stateless_methods_work":0.782,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_legacy_methods_still_work":1.292,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_by_payment_method_directly":0.019,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_supports_gateway_with_context":0.007,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_validates_payment_methods":0.02,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_gets_available_gateways":0.105,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_no_static_state_pollution_between_tests":0.008,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_customer_service_creates_customer_successfully":0.084,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_creates_payment_atomically":1.057,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_tax_service_calculates_tax_amount_correctly":0.038,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_invoice_detail_service_creates_detail_with_taxes_atomically":0.745,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_are_mockeable_for_unit_testing":0.035,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_backward_compatibility_still_works":0.015,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_validates_application_properly":1.47,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_use_database_functions_for_precision":0.416}}