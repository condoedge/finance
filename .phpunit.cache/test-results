{"version":1,"defects":{"Tests\\Unit\\InvoicesTest::testOfTests":8,"Tests\\Unit\\InvoicesTest::testCreatingInvoice":7,"Tests\\Unit\\InvoicesTest::testOfTests2":8,"Tests\\Unit\\InvoicesTest::testCreateInvoice":8,"Tests\\Unit\\InvoicesTest::testUpdateInvoice":8,"Tests\\Unit\\JsonCasesTest::test_cases":8,"Tests\\Unit\\FinantialModelsTest::testBootAllFinantialModels":5,"Tests\\Feature\\IntegrityCheckTest::individual_invoice_detail_save_propagates_to_parent_invoice":8,"Tests\\Feature\\IntegrityCheckTest::updating_invoice_detail_recalculates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::deleting_invoice_detail_updates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::multiple_invoice_details_aggregate_correctly":8,"Tests\\Feature\\IntegrityCheckTest::batch_integrity_check_updates_multiple_records":8,"Tests\\Feature\\IntegrityCheckTest::integrity_checker_handles_cascading_updates":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_performance_with_large_dataset":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_handles_concurrent_modifications":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_validates_calculation_accuracy":8,"Tests\\Feature\\IntegrityCheckTest::integrity_check_works_without_specific_ids":8,"Tests\\Feature\\IntegrityCheckTest::integrity_events_are_triggered_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_individual_invoice_detail_save_propagates_to_parent_invoice":8,"Tests\\Feature\\IntegrityCheckTest::test_updating_invoice_detail_recalculates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::test_deleting_invoice_detail_updates_parent_totals":8,"Tests\\Feature\\IntegrityCheckTest::test_multiple_invoice_details_aggregate_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_batch_integrity_check_updates_multiple_records":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_checker_handles_cascading_updates":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_performance_with_large_dataset":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_handles_concurrent_modifications":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_validates_calculation_accuracy":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_works_without_specific_ids":8,"Tests\\Feature\\IntegrityCheckTest::test_integrity_events_are_triggered_correctly":8,"Tests\\Feature\\IntegrityCheckTest::test_customer_due_amount_integrity_check":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment_for_specific_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_single_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_payment_amount_left":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_invoice_due_amount":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_to_invoice_from_different_customer":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_twice_with_integrity_constraints":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_handles_partial_payment_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_credit_note_to_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_validates_database_integrity_triggers":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_payment_amount_left_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_invoice_due_amount_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_prevents_negative_payment_amount_left":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_zero_amount_applications":7,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_negative_amount_applications":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_multiple_invoice_applications_with_amount_constraints":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_draft_invoice_application_prevention":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_credit_note_application_logic":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_handles_overpayment_scenarios":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_precision_in_decimal_calculations":8,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_concurrent_application_scenarios":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_payment_amount_left_function":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_invoice_due_function":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_on_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_update":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_customer_due_amount_calculation_with_multiple_invoices":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_credit_note_application_with_database_functions":8,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_complex_scenario_with_multiple_payments_and_invoices":8,"Tests\\Unit\\GraphTest::test_graph_calculates_descendants_correctly":8,"Tests\\Unit\\GraphTest::test_graph_calculates_ancestors_correctly":8,"Tests\\Unit\\GraphTest::test_graph_finds_roots_correctly":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_children_then_model_processes_in_correct_order":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_model_then_parents_processes_in_correct_order":8,"Tests\\Unit\\IntegrityCheckerServiceTest::test_full_integrity_check_processes_all_models":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_zero_amount_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment_for_specific_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_single_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_payment_amount_left":7,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_invoice_due_amount":7,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_to_invoice_from_different_customer":7,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_twice_with_integrity_constraints":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_handles_partial_payment_applications":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_credit_note_to_invoice":8,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_validates_database_integrity_triggers":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_payment_amount_left_function":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_invoice_due_function":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_on_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_update":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_customer_due_amount_calculation_with_multiple_invoices":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_credit_note_application_with_database_functions":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_complex_scenario_with_multiple_payments_and_invoices":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_payment_amount_left_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_invoice_due_amount_calculation":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_prevents_negative_payment_amount_left":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_negative_amount_applications":7,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_multiple_invoice_applications_with_amount_constraints":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_draft_invoice_application_prevention":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_credit_note_application_logic":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_handles_overpayment_scenarios":7,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_precision_in_decimal_calculations":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_concurrent_application_scenarios":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_negative_amount_application_on_direct_insert":7,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_converts_negative_amount_into_positive":8,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_converts_negative_amount_applications_into_positives_if_required":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_payment_overapplication_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_invoice_overapplication_on_direct_insert":8,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_negative_payment_to_customer":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_reduces_customer_due_amount":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_cannot_exceed_its_absolute_amount_left":8,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_credit_note":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_reduces_customer_due_amount":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_can_be_applied_to_regular_invoice":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_cannot_be_applied_more_than_its_due_amount":7,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_application_to_multiple_invoices":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_and_credit_interaction":8,"Tests\\Unit\\CustomerPaymentTest::test_sign_consistency_in_calculations":8,"Tests\\Unit\\CustomerPaymentTest::test_database_triggers_handle_negative_amounts_correctly":8,"Tests\\Unit\\CustomerPaymentTest::test_prevents_incorrect_sign_applications":8,"Tests\\Unit\\CustomerPaymentTest::test_zero_amount_applications_are_prevented":7,"Tests\\Unit\\CustomerPaymentTest::test_precision_handling_with_decimals":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_application_behaves_like_positive_payment_to_credit":8,"Tests\\Unit\\CustomerPaymentTest::test_customer_balance_calculation_with_mixed_transactions":8,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_creation_with_credit_payment_service":8,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_cross_customer_applications":7,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_draft_invoice_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_zero_amount_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_delete_on_direct_delete":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_update_that_would_cause_overapplication":7,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_negative_payment_application_to_regular_invoice":8,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note_with_validation":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_updates_amounts_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_credit_note_application_on_direct_insert":8,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_update_on_direct_update":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_determine_fiscal_year_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_get_fiscal_year_boundaries":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_create_fiscal_periods_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_find_period_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_generates_sequence_numbers_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_generates_unique_transaction_ids_per_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_can_create_gl_transaction_with_multi_tenancy":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_enforces_team_isolation_in_gl_data":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_prevents_posting_unbalanced_transactions":8,"Tests\\Unit\\Models\\GeneralLedgerTest::it_prevents_posting_to_closed_periods":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_fiscal_year_calculation_from_date":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_fiscal_period_identification":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_gl_transaction_number_generation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_gl_transaction_balance_validation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_post_unbalanced_transaction":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_create_transaction_in_closed_period":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_use_inactive_account":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_use_no_manual_entry_account_in_manual_gl":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_line_sequence_auto_generation":8,"Tests\\Unit\\GlTransactionIntegrityTest::test_cannot_modify_posted_transaction":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_determine_fiscal_year_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_get_fiscal_year_boundaries":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_create_fiscal_periods_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_find_period_from_date":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_generates_sequence_numbers_for_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_generates_unique_transaction_ids_per_team":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_can_create_gl_transaction_with_multi_tenancy":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_enforces_team_isolation_in_gl_data":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_prevents_posting_unbalanced_transactions":8,"Tests\\Unit\\Models\\GeneralLedgerTest::test_it_prevents_posting_to_closed_periods":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_creates_invoice_with_proper_business_logic":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_business_rules_on_creation":7,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_approves_invoice_with_validation":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_prevents_approval_of_non_draft_invoices":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_calculates_default_taxes_correctly":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_invoice_business_rules":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_handles_database_transactions_properly":8,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_can_be_mocked_for_testing_dependent_code":8,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_by_payment_method_directly":8,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_validates_payment_methods":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_customer_service_creates_customer_successfully":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_creates_payment_atomically":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_tax_service_calculates_tax_amount_correctly":7,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_invoice_detail_service_creates_detail_with_taxes_atomically":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_are_mockeable_for_unit_testing":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_backward_compatibility_still_works":8,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_validates_application_properly":7,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_use_database_functions_for_precision":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_segment_structure":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_segment_values":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_validates_segment_value_length":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_account_from_segments":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_prevents_duplicate_accounts":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_parse_account_id":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_search_accounts_by_pattern":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_validates_segment_combination":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_tracks_segment_value_usage":8,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_generates_account_format_mask":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_validates_last_segment_must_contain_account_in_description":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_creates_segment_with_default_handler":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_creates_segment_with_sequence_handler_and_config":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_creates_account_from_last_segment_only":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_fails_to_create_from_last_segment_when_handlers_missing":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_creates_account_with_fixed_value_handler":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_validates_last_segment_on_update":8,"Tests\\Unit\\Services\\AccountSegmentDefaultHandlerTest::test_it_gets_last_segment":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_creates_segment_structure_with_dto":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_creates_segment_values_with_validation":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_validates_segment_value_length":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_prevents_duplicate_segment_values":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_creates_account_from_segment_values":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_validates_account_completeness":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_prevents_duplicate_accounts":8,"Tests\\Unit\\Services\\AccountSegmentServiceTest::test_it_logs_operations":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_setup_default_segment_structure":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_create_segment_values":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_validates_segment_value_length":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_validate_segment_combinations":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_create_accounts_from_segments":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_create_accounts_using_gl_account_service":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_create_accounts_using_dto":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_create_dto_from_account_id":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_prevents_duplicate_accounts":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_find_or_create_accounts":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_parse_and_build_account_ids":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_get_account_format_mask":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_can_get_segment_usage_statistics":8,"Tests\\Unit\\Services\\AccountSegmentSystemTest::test_it_validates_segment_structure_consistency":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_can_create_balanced_gl_transaction":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_prevents_creating_unbalanced_transaction":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_can_post_balanced_transaction":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_prevents_posting_unbalanced_transaction":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_prevents_modifying_posted_transaction":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_generates_sequential_transaction_numbers":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_restricts_manual_entry_accounts":8,"Tests\\Unit\\Services\\GlTransactionServiceTest::test_it_allows_system_transactions_to_use_restricted_accounts":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_setUp":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_can_create_segment_with_default_handler":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_team_handler_resolves_correct_value":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_fiscal_year_handler_uses_last_digits":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_sequence_handler_increments_correctly":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_fixed_value_handler":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_create_account_with_default_handlers":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_validates_handler_configuration":8,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_get_handler_options_for_ui":8},"times":{"Tests\\Unit\\InvoicesTest::testOfTests":0.073,"Tests\\Unit\\InvoicesTest::testOfTests2":0.005,"Tests\\Unit\\InvoicesTest::testCreatingInvoice":0.563,"Tests\\Unit\\InvoicesTest::testCreateInvoice":1.656,"Tests\\Unit\\InvoicesTest::testUpdateInvoice":1.613,"Tests\\Unit\\JsonCasesTest::test_cases":13.362,"Tests\\Unit\\FinantialModelsTest::testBootAllFinantialModels":0.048,"Tests\\Feature\\IntegrityCheckTest::individual_invoice_detail_save_propagates_to_parent_invoice":0.027,"Tests\\Feature\\IntegrityCheckTest::updating_invoice_detail_recalculates_parent_totals":0.217,"Tests\\Feature\\IntegrityCheckTest::deleting_invoice_detail_updates_parent_totals":0.124,"Tests\\Feature\\IntegrityCheckTest::multiple_invoice_details_aggregate_correctly":0.169,"Tests\\Feature\\IntegrityCheckTest::batch_integrity_check_updates_multiple_records":0.041,"Tests\\Feature\\IntegrityCheckTest::integrity_checker_handles_cascading_updates":0.158,"Tests\\Feature\\IntegrityCheckTest::integrity_check_performance_with_large_dataset":0.135,"Tests\\Feature\\IntegrityCheckTest::integrity_check_handles_concurrent_modifications":0.141,"Tests\\Feature\\IntegrityCheckTest::integrity_check_validates_calculation_accuracy":0.116,"Tests\\Feature\\IntegrityCheckTest::integrity_check_works_without_specific_ids":0.059,"Tests\\Feature\\IntegrityCheckTest::integrity_events_are_triggered_correctly":0.137,"Tests\\Feature\\IntegrityCheckTest::test_individual_invoice_detail_save_propagates_to_parent_invoice":0.58,"Tests\\Feature\\IntegrityCheckTest::test_updating_invoice_detail_recalculates_parent_totals":0.662,"Tests\\Feature\\IntegrityCheckTest::test_deleting_invoice_detail_updates_parent_totals":1.017,"Tests\\Feature\\IntegrityCheckTest::test_multiple_invoice_details_aggregate_correctly":1.052,"Tests\\Feature\\IntegrityCheckTest::test_batch_integrity_check_updates_multiple_records":1.111,"Tests\\Feature\\IntegrityCheckTest::test_integrity_checker_handles_cascading_updates":0.758,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_performance_with_large_dataset":0.415,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_handles_concurrent_modifications":0.86,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_validates_calculation_accuracy":0.753,"Tests\\Feature\\IntegrityCheckTest::test_integrity_check_works_without_specific_ids":1.562,"Tests\\Feature\\IntegrityCheckTest::test_integrity_events_are_triggered_correctly":0.519,"Tests\\Feature\\IntegrityCheckTest::test_customer_due_amount_integrity_check":0.319,"Tests\\Unit\\GraphTest::test_graph_calculates_descendants_correctly":0.01,"Tests\\Unit\\GraphTest::test_graph_calculates_ancestors_correctly":0.003,"Tests\\Unit\\GraphTest::test_graph_finds_roots_correctly":0.003,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_children_then_model_processes_in_correct_order":0.623,"Tests\\Unit\\IntegrityCheckerServiceTest::test_check_model_then_parents_processes_in_correct_order":1.044,"Tests\\Unit\\IntegrityCheckerServiceTest::test_full_integrity_check_processes_all_models":0.454,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment":0.525,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_create_a_customer_payment_for_specific_invoice":0.759,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_single_invoice":1.029,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_payment_to_multiple_invoices":1.325,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_payment_amount_left":0.856,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_more_than_invoice_due_amount":0.741,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_to_invoice_from_different_customer":1.048,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_prevents_applying_payment_twice_with_integrity_constraints":0.856,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_handles_partial_payment_applications":1.057,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_can_apply_credit_note_to_invoice":1.113,"Tests\\Unit\\CustomerPaymentApplicationsTest::it_validates_database_integrity_triggers":0.856,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_payment_amount_left_function":1.752,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_calculate_invoice_due_function":1.741,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_on_insert":1.322,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_overapplication":1.141,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":0.97,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_delete":1.333,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_trigger_updates_on_update":1.056,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_customer_due_amount_calculation_with_multiple_invoices":1.573,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_credit_note_application_with_database_functions":1.431,"Tests\\Unit\\DatabaseIntegrityTest::it_validates_complex_scenario_with_multiple_payments_and_invoices":3.035,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_payment_amount_left_calculation":1.844,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_invoice_due_amount_calculation":1.337,"Tests\\Unit\\InvoicePaymentValidationsTest::it_prevents_negative_payment_amount_left":1.06,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_zero_amount_applications":0.879,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_negative_amount_applications":1.118,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_multiple_invoice_applications_with_amount_constraints":3.514,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_draft_invoice_application_prevention":0.877,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_credit_note_application_logic":1.455,"Tests\\Unit\\InvoicePaymentValidationsTest::it_handles_overpayment_scenarios":0.846,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_precision_in_decimal_calculations":0.946,"Tests\\Unit\\InvoicePaymentValidationsTest::it_validates_concurrent_application_scenarios":1.622,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_zero_amount_applications":1.102,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment":0.545,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_create_a_customer_payment_for_specific_invoice":1.359,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_single_invoice":1.385,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_payment_to_multiple_invoices":2.354,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_payment_amount_left":1.409,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_more_than_invoice_due_amount":1.393,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_to_invoice_from_different_customer":1.609,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_prevents_applying_payment_twice_with_integrity_constraints":1.447,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_handles_partial_payment_applications":1.562,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_can_apply_credit_note_to_invoice":1.73,"Tests\\Unit\\CustomerPaymentApplicationsTest::test_it_validates_database_integrity_triggers":1.179,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_payment_amount_left_function":2.185,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_calculate_invoice_due_function":2.035,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_on_insert":1.492,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_overapplication":1.599,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_invoice_payment_integrity_trigger_prevents_invoice_overapplication":2.2,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_delete":2.37,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_updates_on_update":1.762,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_customer_due_amount_calculation_with_multiple_invoices":3.183,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_credit_note_application_with_database_functions":2.231,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_complex_scenario_with_multiple_payments_and_invoices":4.501,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_payment_amount_left_calculation":2.152,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_invoice_due_amount_calculation":1.676,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_prevents_negative_payment_amount_left":1.29,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_negative_amount_applications":0.38,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_multiple_invoice_applications_with_amount_constraints":2.916,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_draft_invoice_application_prevention":0.891,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_credit_note_application_logic":1.9,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_handles_overpayment_scenarios":1.105,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_precision_in_decimal_calculations":1.393,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_validates_concurrent_application_scenarios":2.169,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_negative_amount_application_on_direct_insert":0.458,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_converts_negative_amount_into_positive":1.213,"Tests\\Unit\\InvoicePaymentValidationsTest::test_it_converts_negative_amount_applications_into_positives_if_required":1.167,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_payment_overapplication_on_direct_insert":1.228,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_invoice_overapplication_on_direct_insert":1.417,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_negative_payment_to_customer":0.413,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_reduces_customer_due_amount":1.076,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note":1.195,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_cannot_exceed_its_absolute_amount_left":1.176,"Tests\\Unit\\CustomerPaymentTest::test_it_can_create_credit_note":1.005,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_reduces_customer_due_amount":1.713,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_can_be_applied_to_regular_invoice":1.972,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_cannot_be_applied_more_than_its_due_amount":1.665,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_application_to_multiple_invoices":3.014,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_and_credit_interaction":2.5,"Tests\\Unit\\CustomerPaymentTest::test_sign_consistency_in_calculations":1.786,"Tests\\Unit\\CustomerPaymentTest::test_database_triggers_handle_negative_amounts_correctly":1.104,"Tests\\Unit\\CustomerPaymentTest::test_prevents_incorrect_sign_applications":1.109,"Tests\\Unit\\CustomerPaymentTest::test_zero_amount_applications_are_prevented":1.129,"Tests\\Unit\\CustomerPaymentTest::test_precision_handling_with_decimals":1.255,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_application_behaves_like_positive_payment_to_credit":2.108,"Tests\\Unit\\CustomerPaymentTest::test_customer_balance_calculation_with_mixed_transactions":1.886,"Tests\\Unit\\CustomerPaymentTest::test_credit_note_creation_with_credit_payment_service":1.636,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_cross_customer_applications":2.208,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_draft_invoice_application_on_direct_insert":1.135,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_zero_amount_application_on_direct_insert":1.067,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_updates_amounts_on_direct_insert":1.281,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_credit_note_application_on_direct_insert":1.721,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_update_on_direct_update":1.183,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_correctly_handles_delete_on_direct_delete":1.129,"Tests\\Unit\\DatabaseIntegrityTest::test_it_validates_trigger_prevents_update_that_would_cause_overapplication":3.05,"Tests\\Unit\\CustomerPaymentTest::test_validation_prevents_negative_payment_application_to_regular_invoice":1.593,"Tests\\Unit\\CustomerPaymentTest::test_negative_payment_can_be_applied_to_credit_note_with_validation":1.449,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_creates_invoice_with_proper_business_logic":0.51,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_business_rules_on_creation":0.658,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_approves_invoice_with_validation":0.022,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_prevents_approval_of_non_draft_invoices":0.006,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_calculates_default_taxes_correctly":0.78,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_validates_invoice_business_rules":0.006,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_handles_database_transactions_properly":0.498,"Tests\\Unit\\Services\\Invoice\\InvoiceServiceTest::test_it_can_be_mocked_for_testing_dependent_code":1.587,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_gateway_without_static_state":0.817,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_gets_cash_account_without_static_state":0.802,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_handles_concurrent_requests_safely":1.542,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_facade_stateless_methods_work":0.782,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_legacy_methods_still_work":1.292,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_resolves_by_payment_method_directly":0.019,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_supports_gateway_with_context":0.007,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_validates_payment_methods":0.02,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_it_gets_available_gateways":0.105,"Tests\\Unit\\Services\\PaymentGatewayStatelessTest::test_no_static_state_pollution_between_tests":0.008,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_customer_service_creates_customer_successfully":0.084,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_creates_payment_atomically":1.057,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_tax_service_calculates_tax_amount_correctly":0.038,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_invoice_detail_service_creates_detail_with_taxes_atomically":0.745,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_are_mockeable_for_unit_testing":0.035,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_backward_compatibility_still_works":0.015,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_payment_service_validates_application_properly":1.47,"Tests\\Unit\\Services\\ServiceLayerIntegrationTest::test_services_use_database_functions_for_precision":0.416,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_segment_structure":0.036,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_segment_values":0.004,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_validates_segment_value_length":0.003,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_create_account_from_segments":0.004,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_prevents_duplicate_accounts":0.003,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_parse_account_id":0.004,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_can_search_accounts_by_pattern":0.003,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_validates_segment_combination":0.003,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_tracks_segment_value_usage":0.003,"Condoedge\\Finance\\Tests\\Unit\\AccountSegmentSystemTest::test_it_generates_account_format_mask":0.004,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_setUp":0.105,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_can_create_segment_with_default_handler":0.008,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_team_handler_resolves_correct_value":0.012,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_fiscal_year_handler_uses_last_digits":0.009,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_sequence_handler_increments_correctly":0.004,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_fixed_value_handler":0.004,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_create_account_with_default_handlers":0.008,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_validates_handler_configuration":0.004,"Tests\\Unit\\Services\\SegmentDefaultHandlerTest::test_test_get_handler_options_for_ui":0.004}}